{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_notaryAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "BN254_MODULUS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addNotary",
      "inputs": [
        {
          "name": "_notaryAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "digests",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isNotary",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeNotary",
      "inputs": [
        {
          "name": "_notaryAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifyNotarySignature",
      "inputs": [
        {
          "name": "digest",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "v",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "signer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "manifest",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "value",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "InvalidDigest",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNotary",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignatureLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561000f575f80fd5b5060405162000c8638038062000c868339818101604052810190610033919061022d565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a4575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009b9190610267565b60405180910390fd5b6100b38161010e60201b60201c565b506001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050610280565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101fc826101d3565b9050919050565b61020c816101f2565b8114610216575f80fd5b50565b5f8151905061022781610203565b92915050565b5f60208284031215610242576102416101cf565b5b5f61024f84828501610219565b91505092915050565b610261816101f2565b82525050565b5f60208201905061027a5f830184610258565b92915050565b6109f8806200028e5f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c806386785a6f1161006457806386785a6f1461011b5780638da5cb5b14610137578063ead7b5f614610155578063f13eed9714610173578063f2fde38b146101a357610091565b80630588565f146100955780631c39b7d7146100b15780632e948d35146100e1578063715018a614610111575b5f80fd5b6100af60048036038101906100aa9190610740565b6101bf565b005b6100cb60048036038101906100c691906107d4565b61021e565b6040516100d8919061088b565b60405180910390f35b6100fb60048036038101906100f69190610740565b6103e6565b60405161010891906108b3565b60405180910390f35b6101196103fb565b005b61013560048036038101906101309190610740565b61040e565b005b61013f61046d565b60405161014c91906108db565b60405180910390f35b61015d610494565b60405161016a919061090c565b60405180910390f35b61018d60048036038101906101889190610740565b6104b8565b60405161019a919061088b565b60405180910390f35b6101bd60048036038101906101b89190610740565b6104d5565b005b6101c7610559565b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661029f576040517f495b5d7c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102aa8884846105e0565b6102e0576040517f3e78eb9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6001898989896040515f81526020016040526040516103039493929190610934565b6020604051602081039080840390855afa158015610323573d5f803e3d5ffd5b5050506020604051035190508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610394576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8860025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506001915050979650505050505050565b6002602052805f5260405f205f915090505481565b610403610559565b61040c5f61061a565b565b610416610559565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6001602052805f5260405f205f915054906101000a900460ff1681565b6104dd610559565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361054d575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161054491906108db565b60405180910390fd5b6105568161061a565b50565b6105616106db565b73ffffffffffffffffffffffffffffffffffffffff1661057f61046d565b73ffffffffffffffffffffffffffffffffffffffff16146105de576105a26106db565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105d591906108db565b60405180910390fd5b565b5f8082846040516020016105f5929190610997565b6040516020818303038152906040528051906020012090508085149150509392505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61070f826106e6565b9050919050565b61071f81610705565b8114610729575f80fd5b50565b5f8135905061073a81610716565b92915050565b5f60208284031215610755576107546106e2565b5b5f6107628482850161072c565b91505092915050565b5f819050919050565b61077d8161076b565b8114610787575f80fd5b50565b5f8135905061079881610774565b92915050565b5f60ff82169050919050565b6107b38161079e565b81146107bd575f80fd5b50565b5f813590506107ce816107aa565b92915050565b5f805f805f805f60e0888a0312156107ef576107ee6106e2565b5b5f6107fc8a828b0161078a565b975050602061080d8a828b016107c0565b965050604061081e8a828b0161078a565b955050606061082f8a828b0161078a565b94505060806108408a828b0161072c565b93505060a06108518a828b0161078a565b92505060c06108628a828b0161078a565b91505092959891949750929550565b5f8115159050919050565b61088581610871565b82525050565b5f60208201905061089e5f83018461087c565b92915050565b6108ad8161076b565b82525050565b5f6020820190506108c65f8301846108a4565b92915050565b6108d581610705565b82525050565b5f6020820190506108ee5f8301846108cc565b92915050565b5f819050919050565b610906816108f4565b82525050565b5f60208201905061091f5f8301846108fd565b92915050565b61092e8161079e565b82525050565b5f6080820190506109475f8301876108a4565b6109546020830186610925565b61096160408301856108a4565b61096e60608301846108a4565b95945050505050565b5f819050919050565b61099161098c8261076b565b610977565b82525050565b5f6109a28285610980565b6020820191506109b28284610980565b602082019150819050939250505056fea26469706673582212200487c677b4172d66d540ea2615170744ac4ecc56187f456f8b19d75df04cc2b464736f6c63430008160033",
    "sourceMap": "188:2908:22:-:0;;;993:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:10;1297:1:19;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1086:4:22::1;1059:8:::0;:24:::1;1068:14;1059:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;993:104:::0;188:2908;;2912:187:19;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:24:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;188:2908:22:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b5060043610610091575f3560e01c806386785a6f1161006457806386785a6f1461011b5780638da5cb5b14610137578063ead7b5f614610155578063f13eed9714610173578063f2fde38b146101a357610091565b80630588565f146100955780631c39b7d7146100b15780632e948d35146100e1578063715018a614610111575b5f80fd5b6100af60048036038101906100aa9190610740565b6101bf565b005b6100cb60048036038101906100c691906107d4565b61021e565b6040516100d8919061088b565b60405180910390f35b6100fb60048036038101906100f69190610740565b6103e6565b60405161010891906108b3565b60405180910390f35b6101196103fb565b005b61013560048036038101906101309190610740565b61040e565b005b61013f61046d565b60405161014c91906108db565b60405180910390f35b61015d610494565b60405161016a919061090c565b60405180910390f35b61018d60048036038101906101889190610740565b6104b8565b60405161019a919061088b565b60405180910390f35b6101bd60048036038101906101b89190610740565b6104d5565b005b6101c7610559565b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661029f576040517f495b5d7c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102aa8884846105e0565b6102e0576040517f3e78eb9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6001898989896040515f81526020016040526040516103039493929190610934565b6020604051602081039080840390855afa158015610323573d5f803e3d5ffd5b5050506020604051035190508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610394576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8860025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506001915050979650505050505050565b6002602052805f5260405f205f915090505481565b610403610559565b61040c5f61061a565b565b610416610559565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6001602052805f5260405f205f915054906101000a900460ff1681565b6104dd610559565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361054d575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161054491906108db565b60405180910390fd5b6105568161061a565b50565b6105616106db565b73ffffffffffffffffffffffffffffffffffffffff1661057f61046d565b73ffffffffffffffffffffffffffffffffffffffff16146105de576105a26106db565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105d591906108db565b60405180910390fd5b565b5f8082846040516020016105f5929190610997565b6040516020818303038152906040528051906020012090508085149150509392505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61070f826106e6565b9050919050565b61071f81610705565b8114610729575f80fd5b50565b5f8135905061073a81610716565b92915050565b5f60208284031215610755576107546106e2565b5b5f6107628482850161072c565b91505092915050565b5f819050919050565b61077d8161076b565b8114610787575f80fd5b50565b5f8135905061079881610774565b92915050565b5f60ff82169050919050565b6107b38161079e565b81146107bd575f80fd5b50565b5f813590506107ce816107aa565b92915050565b5f805f805f805f60e0888a0312156107ef576107ee6106e2565b5b5f6107fc8a828b0161078a565b975050602061080d8a828b016107c0565b965050604061081e8a828b0161078a565b955050606061082f8a828b0161078a565b94505060806108408a828b0161072c565b93505060a06108518a828b0161078a565b92505060c06108628a828b0161078a565b91505092959891949750929550565b5f8115159050919050565b61088581610871565b82525050565b5f60208201905061089e5f83018461087c565b92915050565b6108ad8161076b565b82525050565b5f6020820190506108c65f8301846108a4565b92915050565b6108d581610705565b82525050565b5f6020820190506108ee5f8301846108cc565b92915050565b5f819050919050565b610906816108f4565b82525050565b5f60208201905061091f5f8301846108fd565b92915050565b61092e8161079e565b82525050565b5f6080820190506109475f8301876108a4565b6109546020830186610925565b61096160408301856108a4565b61096e60608301846108a4565b95945050505050565b5f819050919050565b61099161098c8261076b565b610977565b82525050565b5f6109a28285610980565b6020820191506109b28284610980565b602082019150819050939250505056fea26469706673582212200487c677b4172d66d540ea2615170744ac4ecc56187f456f8b19d75df04cc2b464736f6c63430008160033",
    "sourceMap": "188:2908:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2239:855;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:19;;;:::i;:::-;;1411:114:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;431:125:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;293:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1196:110:22;1531:13:19;:11;:13::i;:::-;1295:4:22::1;1268:8:::0;:24:::1;1277:14;1268:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1196:110:::0;:::o;2239:855::-;2446:4;2510:8;:16;2519:6;2510:16;;;;;;;;;;;;;;;;;;;;;;;;;2505:70;;2549:15;;;;;;;;;;;;;;2505:70;2589:38;2603:6;2611:8;2621:5;2589:13;:38::i;:::-;2584:92;;2650:15;;;;;;;;;;;;;;2584:92;2886:23;2912:26;2922:6;2930:1;2933;2936;2912:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2886:52;;2971:6;2952:25;;:15;:25;;;2948:81;;3000:18;;;;;;;;;;;;;;2948:81;3060:6;3038:7;:19;3046:10;3038:19;;;;;;;;;;;;;;;:28;;;;3083:4;3076:11;;;2239:855;;;;;;;;;:::o;382:42::-;;;;;;;;;;;;;;;;;:::o;2293:101:19:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1411:114:22:-;1531:13:19;:11;:13::i;:::-;1513:5:22::1;1486:8;:24;1495:14;1486:24;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1411:114:::0;:::o;1638:85:19:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;431:125:22:-;479:77;431:125;:::o;293:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:19:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1651:214:22:-;1749:4;1765:12;1807:6;1815:9;1790:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1780:46;;;;;;1765:61;;1854:4;1843:7;:15;1836:22;;;1651:214;;;;;:::o;2912:187:19:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:20:-;709:7;735:10;728:17;;656:96;:::o;88:117:24:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:86::-;1567:7;1607:4;1600:5;1596:16;1585:27;;1532:86;;;:::o;1624:118::-;1695:22;1711:5;1695:22;:::i;:::-;1688:5;1685:33;1675:61;;1732:1;1729;1722:12;1675:61;1624:118;:::o;1748:135::-;1792:5;1830:6;1817:20;1808:29;;1846:31;1871:5;1846:31;:::i;:::-;1748:135;;;;:::o;1889:1199::-;2000:6;2008;2016;2024;2032;2040;2048;2097:3;2085:9;2076:7;2072:23;2068:33;2065:120;;;2104:79;;:::i;:::-;2065:120;2224:1;2249:53;2294:7;2285:6;2274:9;2270:22;2249:53;:::i;:::-;2239:63;;2195:117;2351:2;2377:51;2420:7;2411:6;2400:9;2396:22;2377:51;:::i;:::-;2367:61;;2322:116;2477:2;2503:53;2548:7;2539:6;2528:9;2524:22;2503:53;:::i;:::-;2493:63;;2448:118;2605:2;2631:53;2676:7;2667:6;2656:9;2652:22;2631:53;:::i;:::-;2621:63;;2576:118;2733:3;2760:53;2805:7;2796:6;2785:9;2781:22;2760:53;:::i;:::-;2750:63;;2704:119;2862:3;2889:53;2934:7;2925:6;2914:9;2910:22;2889:53;:::i;:::-;2879:63;;2833:119;2991:3;3018:53;3063:7;3054:6;3043:9;3039:22;3018:53;:::i;:::-;3008:63;;2962:119;1889:1199;;;;;;;;;;:::o;3094:90::-;3128:7;3171:5;3164:13;3157:21;3146:32;;3094:90;;;:::o;3190:109::-;3271:21;3286:5;3271:21;:::i;:::-;3266:3;3259:34;3190:109;;:::o;3305:210::-;3392:4;3430:2;3419:9;3415:18;3407:26;;3443:65;3505:1;3494:9;3490:17;3481:6;3443:65;:::i;:::-;3305:210;;;;:::o;3521:118::-;3608:24;3626:5;3608:24;:::i;:::-;3603:3;3596:37;3521:118;;:::o;3645:222::-;3738:4;3776:2;3765:9;3761:18;3753:26;;3789:71;3857:1;3846:9;3842:17;3833:6;3789:71;:::i;:::-;3645:222;;;;:::o;3873:118::-;3960:24;3978:5;3960:24;:::i;:::-;3955:3;3948:37;3873:118;;:::o;3997:222::-;4090:4;4128:2;4117:9;4113:18;4105:26;;4141:71;4209:1;4198:9;4194:17;4185:6;4141:71;:::i;:::-;3997:222;;;;:::o;4225:77::-;4262:7;4291:5;4280:16;;4225:77;;;:::o;4308:118::-;4395:24;4413:5;4395:24;:::i;:::-;4390:3;4383:37;4308:118;;:::o;4432:222::-;4525:4;4563:2;4552:9;4548:18;4540:26;;4576:71;4644:1;4633:9;4629:17;4620:6;4576:71;:::i;:::-;4432:222;;;;:::o;4660:112::-;4743:22;4759:5;4743:22;:::i;:::-;4738:3;4731:35;4660:112;;:::o;4778:545::-;4951:4;4989:3;4978:9;4974:19;4966:27;;5003:71;5071:1;5060:9;5056:17;5047:6;5003:71;:::i;:::-;5084:68;5148:2;5137:9;5133:18;5124:6;5084:68;:::i;:::-;5162:72;5230:2;5219:9;5215:18;5206:6;5162:72;:::i;:::-;5244;5312:2;5301:9;5297:18;5288:6;5244:72;:::i;:::-;4778:545;;;;;;;:::o;5329:79::-;5368:7;5397:5;5386:16;;5329:79;;;:::o;5414:157::-;5519:45;5539:24;5557:5;5539:24;:::i;:::-;5519:45;:::i;:::-;5514:3;5507:58;5414:157;;:::o;5577:397::-;5717:3;5732:75;5803:3;5794:6;5732:75;:::i;:::-;5832:2;5827:3;5823:12;5816:19;;5845:75;5916:3;5907:6;5845:75;:::i;:::-;5945:2;5940:3;5936:12;5929:19;;5965:3;5958:10;;5577:397;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BN254_MODULUS()": "ead7b5f6",
    "addNotary(address)": "0588565f",
    "digests(address)": "2e948d35",
    "isNotary(address)": "f13eed97",
    "owner()": "8da5cb5b",
    "removeNotary(address)": "86785a6f",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "verifyNotarySignature(bytes32,uint8,bytes32,bytes32,address,bytes32,bytes32)": "1c39b7d7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notaryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidDigest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNotary\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BN254_MODULUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notaryAddress\",\"type\":\"address\"}],\"name\":\"addNotary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"digests\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isNotary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notaryAddress\",\"type\":\"address\"}],\"name\":\"removeNotary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"manifest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"verifyNotarySignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addNotary(address)\":{\"params\":{\"_notaryAddress\":\"The address of the notary to add\"}},\"constructor\":{\"params\":{\"_notaryAddress\":\"The address of the notary to add\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeNotary(address)\":{\"params\":{\"_notaryAddress\":\"The address of the notary to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyNotarySignature(bytes32,uint8,bytes32,bytes32,address,bytes32,bytes32)\":{\"params\":{\"digest\":\"The hash of the data that was signed\",\"manifest\":\"The manifest of the data\",\"r\":\"The R value of the signature\",\"s\":\"The S value of the signature\",\"signer\":\"The address that signed the data\",\"v\":\"The recovery id\",\"value\":\"The value of the data\"}}},\"title\":\"SignatureChecker\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidDigest()\":[{\"notice\":\"Error for invalid digest\"}],\"InvalidNotary()\":[{\"notice\":\"Error for invalid notary addresses\"}],\"InvalidSignature()\":[{\"notice\":\"Error for invalid signatures\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Error for invalid signature length\"}]},\"kind\":\"user\",\"methods\":{\"addNotary(address)\":{\"notice\":\"Adds a notary\"},\"constructor\":{\"notice\":\"Constructor configures the notary address\"},\"digests(address)\":{\"notice\":\"valid digests for a given address\"},\"isNotary(address)\":{\"notice\":\"Mapping of notary addresses to their validity\"},\"removeNotary(address)\":{\"notice\":\"Removes a notary\"},\"verifyNotarySignature(bytes32,uint8,bytes32,bytes32,address,bytes32,bytes32)\":{\"notice\":\"Verifies a signature\"}},\"notice\":\"A contract that verifies signatures\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/SignatureChecker.sol\":{\"keccak256\":\"0xb7b40b7ce330ad7e1d87b97744ce1136ede23420436e20711dd2f6ecfe2f4a2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c8f24ac6b014adc4754349cb54c961378911a1d0b2a5cfb2625e74e317135ce\",\"dweb:/ipfs/QmYGTZRmLrJoe5hDwtHccyKzgxvu65Wej6UP9Cue4t3JFK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_notaryAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidDigest"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNotary"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignatureLength"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BN254_MODULUS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_notaryAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNotary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "digests",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isNotary",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_notaryAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeNotary"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "digest",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "manifest",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "value",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyNotarySignature",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addNotary(address)": {
            "params": {
              "_notaryAddress": "The address of the notary to add"
            }
          },
          "constructor": {
            "params": {
              "_notaryAddress": "The address of the notary to add"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "removeNotary(address)": {
            "params": {
              "_notaryAddress": "The address of the notary to remove"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "verifyNotarySignature(bytes32,uint8,bytes32,bytes32,address,bytes32,bytes32)": {
            "params": {
              "digest": "The hash of the data that was signed",
              "manifest": "The manifest of the data",
              "r": "The R value of the signature",
              "s": "The S value of the signature",
              "signer": "The address that signed the data",
              "v": "The recovery id",
              "value": "The value of the data"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addNotary(address)": {
            "notice": "Adds a notary"
          },
          "constructor": {
            "notice": "Constructor configures the notary address"
          },
          "digests(address)": {
            "notice": "valid digests for a given address"
          },
          "isNotary(address)": {
            "notice": "Mapping of notary addresses to their validity"
          },
          "removeNotary(address)": {
            "notice": "Removes a notary"
          },
          "verifyNotarySignature(bytes32,uint8,bytes32,bytes32,address,bytes32,bytes32)": {
            "notice": "Verifies a signature"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SignatureChecker.sol": "SignatureChecker"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "src/SignatureChecker.sol": {
        "keccak256": "0xb7b40b7ce330ad7e1d87b97744ce1136ede23420436e20711dd2f6ecfe2f4a2d",
        "urls": [
          "bzz-raw://4c8f24ac6b014adc4754349cb54c961378911a1d0b2a5cfb2625e74e317135ce",
          "dweb:/ipfs/QmYGTZRmLrJoe5hDwtHccyKzgxvu65Wej6UP9Cue4t3JFK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 22
}